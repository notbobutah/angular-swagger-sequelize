{"version":3,"sources":["modules/cards/controllers/cards-controller.ts"],"names":[],"mappings":";AAAA,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AAEpC,IAAO,YAAY,WAAW,2BAA2B,CAAC,CAAC;AAE3D,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAC9B,IAAI,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;AAEjC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,GAAG;IAEzB,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC/C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,GAAG;IAExB,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;IAEtC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG;IAE5B,IAAI,OAAO,GAAc,GAAG,CAAC,IAAI,CAAC;IAElC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAChC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG;IAE3B,IAAI,OAAO,GAAc,GAAG,CAAC,IAAI,CAAC;IAElC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAChC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG;IAE9B,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;IAEtC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAGH,iBAAS,MAAM,CAAC","file":"../../../../modules/cards/controllers/cards-controller.js","sourcesContent":["import express = require('express');\n\nimport cardsService = require('../services/cards-service');\n\nvar router = express.Router();\nvar service = new cardsService();\n\nrouter.get('/list', (req, res) => {\n\n    service.getList(req.query.searchValue).then((result) => {\n        res.send(result);\n    }).catch((error) => {\n        res.send(error);\n    });\n\n});\n\nrouter.get('/one', (req, res) => {\n\n    var idcard = <number>req.query.idcard;\n\n    service.get(idcard).then((result) => {\n        res.send(result);\n    }).catch((error) => {\n        res.send(error);\n    });\n\n});\n\nrouter.post('/create', (req, res) => {\n\n    var request = <App.Icard>req.body;\n\n    service.create(request).then((result) => {\n        res.send(result);\n    }).catch((error) => {\n        res.send(error);\n    });\n\n});\n\nrouter.put('/update', (req, res) => {\n\n    var request = <App.Icard>req.body;\n\n    service.update(request).then((result) => {\n        res.send(result);\n    }).catch((error) => {\n        res.send(error);\n    });\n\n});\n\nrouter.delete('/delete', (req, res) => {\n\n    var idcard = <number>req.query.idcard;\n\n    service.delete(idcard).then((result) => {\n        res.send(result);\n    }).catch((error) => {\n        res.send(error);\n    });\n\n});\n\n\nexport = router;\n"]}