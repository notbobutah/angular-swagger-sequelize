{"version":3,"sources":["modules/card/services/card-service.ts"],"names":[],"mappings":";AACA,IAAO,eAAe,WAAW,6BAA6B,CAAC,CAAC;AAGhE;IAAA;IAoDA,CAAC;IAlDG,oCAAO,GAAP,UAAQ,WAAmB;QAEvB,IAAI,WAAW,GAA0B;YACrC,KAAK,EAAE;gBACH,YAAY;aACf;SACJ,CAAC;QAEF,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,WAAW,CAAC,KAAK,GAAG;gBAChB,GAAG,EAAE;oBACD,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,MAAI,WAAW,MAAG,EAAE,EAAE;oBAC7C,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAI,WAAW,MAAG,EAAE,EAAE;oBAC5C,EAAE,kBAAkB,EAAE,EAAE,MAAM,EAAE,MAAI,WAAW,MAAG,EAAE,EAAE;iBACzD;aACJ,CAAA;QACL,CAAC;QAED,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IAED,gCAAG,GAAH,UAAI,YAAoB;QACpB,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,mCAAM,GAAN,UAAO,OAAwB;QAC3B,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,mCAAM,GAAN,UAAO,OAAwB;QAE3B,MAAM,CAAM,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAC,kBAAkB;YAEtF,kBAAkB,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;YACjD,kBAAkB,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YAC/C,kBAAkB,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;YAEnD,MAAM,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,mCAAM,GAAN,UAAO,YAAoB;QAEvB,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAC,kBAAkB;YAExE,MAAM,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAExC,CAAC,CAAC,CAAC;IACP,CAAC;IAEL,yBAAC;AAAD,CApDA,AAoDC,IAAA;AAED,iBAAS,kBAAkB,CAAC","file":"../../../../modules/card/services/card-service.js","sourcesContent":["import Sequelize = require('sequelize');\nimport cardModel = require('../models/card-friend-model');\n\n\nclass cardsService {\n\n    getList(searchValue: string): Promise<cardModel.IcardInstance[]> {\n\n        var findOptions: Sequelize.FindOptions = {\n            order: [\n                'reputation'\n            ]\n        };\n\n        if (searchValue) {\n            findOptions.where = {\n                $or: [\n                    { firstName: { $iLike: `%${searchValue}%` } },\n                    { lastName: { $iLike: `%${searchValue}%` } },\n                    { favoritecardPhrase: { $iLike: `%${searchValue}%` } },\n                ]\n            }\n        }\n        \n        return cardModel.Model.findAll(findOptions);\n    }\n\n    get(idcard: number): Promise<cardModel.IcardInstance> {\n        return cardModel.Model.findById(idcard);\n    }\n\n    create(request: App.Icard): Promise<cardModel.IcardInstance> {\n        return cardModel.Model.create(request);\n    }\n\n    update(request: App.Icard): Promise<cardModel.IcardInstance> {\n        \n        return <any>(cardModel.Model.findById(request.idcard).then((cardInstance) => {\n\n            cardInstance.firstName = request.firstName;\n            cardInstance.lastName = request.lastName;\n            cardInstance.reputation = request.reputation;\n\n            return cardInstance.save();\n        }));\n    }\n\n    delete(idcard: number) {\n\n        return cardModel.Model.findById(idcard).then((cardInstance) => {\n\n            return cardInstance.destroy();\n\n        });\n    }\n\n}\n\nexport = cardsService;"]}